@export memory
memory %memory:0 : {min 2}

table %table:0 : {min 1, max 1} funcref

global %global:0 : var i32 = i32 66560

function %fibonacci : [i32] -> [i32] {
{(arg)%0:i32}
#pred = {}
%entry:
  %1 = local.get (arg)%0
  br.table %BB:1 0:%BB:2 1:%BB:0

#pred = {%entry}
%BB:0:
  %2 = const i32 1
  br %exit

#pred = {%entry}
%BB:1:
  %3 = local.get (arg)%0
  %4 = const i32 -1
  %5 = int.add %3 %4
  %6 = call %fibonacci(%5)
  %7 = local.get (arg)%0
  %8 = const i32 -2
  %9 = int.add %7 %8
  %10 = call %fibonacci(%9)
  %11 = int.add %6 %10
  local.set (arg)%0 %11
  br %BB:2

#pred = {%BB:1, %entry}
%BB:2:
  %12 = local.get (arg)%0
  br %exit

#pred = {%BB:2, %BB:0}
%exit:
  %13 = phi i32 [%2, %BB:0] [%12, %BB:2]
  ret %13

}